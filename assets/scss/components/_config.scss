//Set variables for the main site colours
$color-white: rgba(255, 255, 255, 1); //#FFFFFF
$color-black: rgba(0, 0, 0, 1); //#000000
$color-one: rgba(6, 115, 2, 1); //#067302
$color-two: rgba(5, 89, 2, 1); //#055902
$color-three: rgba(2, 38, 1, 1); //#022601
$color-four: rgba(132, 217, 4, 1); //#84D904
$color-five: rgba(215, 242, 5, 1); //#D7F205

.text-uppercase {
  text-transform: uppercase;
}

//Set the fonts
@font-face {
  font-family: 'Kite-One', sans-serif;
  src: url(//fonts.googleapis.com/css?family=Kite+One&display=swap);
}

@font-face {
  font-family: 'Imprima', sans-serif;
  src: url(//fonts.googleapis.com/css?family=Imprima&display=swap);
}

@mixin title-font {
  font-family: 'Kite-One', sans-serif !important;
}

@mixin body-font {
  font-family: 'Imprima', sans-serif !important;
}

//Set media query mixins
@mixin mediaSm {
  @media screen and (max-width: 500px) {
    @content;
  }
}

@mixin mediaMd {
  @media screen and (min-width: 668px) {
    @content;
  }
}

@mixin mediaLg {
  @media screen and (min-width: 1024px) {
    @content;
  }
}

//Set variables for gradients
$gradient-one-two: linear-gradient(to right, $color-one, $color-two);
$gradient-three-four: linear-gradient(to right, $color-one, $color-four);
$gradient-five-six: linear-gradient(to right, $color-two, $color-five);

//Set mixins for gradients
@mixin gradient-one-two {
  background-image: $gradient-one-two;
}

@mixin gradient-three-four {
  background-image: $gradient-three-four;
}

@mixin gradient-five-six {
  background-image: $gradient-five-six;
}

//Set variables for the box-shadows
//First is negative left, positive right; second is negative top, positive bottom. Third is blur. Fourth is the colour.
$box-shadow: 0 0 0 0;

//Set box shadow colours
@mixin box-shadow {
  -webkit-box-shadow: $box-shadow;
  -moz-box-shadow: $box-shadow;
  box-shadow: $box-shadow;
}


//Set mixins for transitions
//$transform-property is the property affected (all, transform)
//$transform-duration is the duration of the transition
//$transform-timing is the timing of the transition (ease,linear, ease-in, ease-out, ease-in-out)
//$transform-delay is the delay on the beginning of the transition (usually ms)
//Initialising variables
$transition-property: 0;
$transition-duration: 0;
$transition-timing: 0;
$transition-delay: 0;

@mixin mixin-transition {
  -webkit-transition: $transition-property $transition-duration $transition-timing $transition-delay;
  -moz-transition: $transition-property $transition-duration $transition-timing $transition-delay;
  -ms-transition: $transition-property $transition-duration $transition-timing $transition-delay;
  -o-transition: $transition-property $transition-duration $transition-timing $transition-delay;
  transition: $transition-property $transition-duration $transition-timing $transition-delay;
}

//Set mixin for transform
//$transform-rotation-degrees are the degrees for the rotation (0deg to 360deg)
//$transform-x-translation is the length of the horizontal translation (px, rem)
//$transform-y-translation is the length of the verticalal translation (px, rem)
//$transform-scale is the scaling size (1 equal, 2 double size, 3 triple size)
//Initialising variables
$transform-rotation-degrees: 0deg;
$transform-x-translation: 0rem;
$transform-y-translation: 0rem;
$transform-scale: 0;

@mixin mixin-transform {
  -webkit-transform: rotate($transform-rotation-degrees) translateX($transform-x-translation) translateY($transform-y-translation) scale($transform-scale);
  -moz-transform: rotate($transform-rotation-degrees) translateX($transform-x-translation) translateY($transform-y-translation) scale($transform-scale);
  -ms-transform: rotate($transform-rotation-degrees) translateX($transform-x-translation) translateY($transform-y-translation) scale($transform-scale);
  -o-transform: rotate($transform-rotation-degrees) translateX($transform-x-translation) translateY($transform-y-translation) scale($transform-scale);
  transform: rotate($transform-rotation-degrees) translateX($transform-x-translation) translateY($transform-y-translation) scale($transform-scale);
}

//Set text colour - if required
// @function set-text-color($color) {
//     @if (lightness($color) > 48) {
//       @return #000;
//     }

//     @else {
//       @return #fff;
//     }
//   }

.test {
  border: 1px solid red;
}